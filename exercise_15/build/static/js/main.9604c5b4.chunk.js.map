{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Contact.js","components/Persons.js","services/persons.js","components/Notification.js","App.js","index.js"],"names":["Filter","filterPersons","handleFilterChange","value","onChange","PersonForm","props","onSubmit","addContact","newName","handleNameChange","newNumber","handleNumberChange","type","Contact","name","number","handlePersonDelete","id","onClick","Persons","showPersons","map","person","baseUrl","personService","getAll","axios","get","then","response","data","create","newObject","post","update","put","remove","delete","Notification","message","error","className","App","useState","persons","setPersons","setNewName","setNewNumber","setFilterPersons","setMessage","setError","useEffect","initialPersons","filter","toLowerCase","includes","event","target","preventDefault","every","contactObject","length","returnedPerson","concat","setTimeout","catch","console","log","window","confirm","samePerson","find","changedPerson","noResponse","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9604c5b4.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Filter = ({filterPersons, handleFilterChange}) => {\r\n    return (\r\n        <div>\r\n            filter shown with <input \r\n                value={filterPersons}\r\n                onChange={handleFilterChange}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nconst PersonForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.addContact}>\r\n            <div>\r\n                name: <input value={props.newName} onChange={props.handleNameChange} />\r\n            </div>\r\n            <div>\r\n                number: <input value={props.newNumber} onChange={props.handleNumberChange} />\r\n            </div>\r\n            <div>\r\n                <button type=\"submit\">add</button>\r\n            </div>\r\n      </form>\r\n    )\r\n}\r\n\r\nexport default PersonForm","import React from 'react'\r\n\r\nconst Contact = ({name, number, handlePersonDelete, id}) => {\r\n    \r\n    return (\r\n        <div>\r\n           <span>{name} {number}</span>\r\n           <button id={id} onClick={handlePersonDelete}>delete</button> \r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Contact","import React from 'react'\r\nimport Contact from './Contact'\r\n\r\nconst Persons = (props) => {\r\n    // console.log(props.showPersons)\r\n    if (props.showPersons) {\r\n        return (\r\n             <div>\r\n                {props.showPersons.map(person => \r\n                    <Contact key={person.id} \r\n                        name={person.name} \r\n                        number={person.number}\r\n                        handlePersonDelete={props.handlePersonDelete}\r\n                        id={person.id}\r\n                    />\r\n                )}\r\n            </div>\r\n        )\r\n    } else {\r\n        return <div>Loading...</div>\r\n    }\r\n}\r\n\r\nexport default Persons","import axios from \"axios\"\r\n\r\nconst baseUrl = '/api/persons'\r\n// const baseUrl = 'https://fast-woodland-29273.herokuapp.com/api/persons'\r\n// const baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = (newObject) => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst remove = (id) => {\r\n  return axios.delete(`${baseUrl}/${id}`)\r\n  // request.then(response => console.log(response.data))  // you'll see '{}' in the coonsole, No data is sent with the request, so nothing is returned\r\n}\r\n\r\nconst personService = {\r\n  getAll,\r\n  create,\r\n  update,\r\n  remove\r\n}\r\n\r\nexport default personService","import React from 'react'\r\n\r\nconst Notification = ({ message, error }) => {\r\n  if (message === null) {\r\n    return null\r\n  }\r\n\r\n  if (error === true) {\r\n    return (\r\n      <div className='error'>\r\n        {message}\r\n      </div>\r\n    )\r\n  } else {\r\n    return (\r\n      <div className='message'>\r\n        {message}\r\n      </div>\r\n    )\r\n  }\r\n  \r\n}\r\n\r\nexport default Notification","import React, { useEffect, useState } from 'react'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport personService from './services/persons'\nimport Notification from './components/Notification'\nimport './index.css'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [filterPersons, setFilterPersons] = useState('')\n  const [message, setMessage] = useState('No message at the moment...')\n  const [error, setError] = useState(false)\n\n  useEffect(() => {\n    // console.log('effect')\n\n    personService\n      .getAll()\n      .then(initialPersons => {\n        // console.log('promose fulfilled')\n        // console.log(initialPersons)\n        setPersons(initialPersons)\n      })\n  }, [])\n  // console.log('render', persons.length, 'persons')\n\n  const addContact = (event) => {\n    event.preventDefault()\n    if (persons.every(person => person.name !== newName)) {\n      const contactObject = {\n        name: newName,\n        number: newNumber,\n        id: persons.length + 1\n      }\n\n      personService\n        .create(contactObject)\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson))\n          setNewName('')\n          setNewNumber('')\n          setError(false)\n          setMessage(\n            `Added ${returnedPerson.name}`\n          )\n          setTimeout(() => {\n            setMessage(null)\n          }, 5000)\n        })\n        .catch(error => {\n          console.log(error.response.data.error)\n          setMessage(\n            `${error.response.data.error}`\n          )\n          setTimeout(() => {\n            setMessage(null)\n          }, 5000)\n          setError(true)\n          setNewName('')\n          setNewNumber('')\n        })\n\n    } else {\n      const confirm = window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)\n      if (confirm) {\n        const samePerson = persons.find(person => person.name === newName)\n        const changedPerson = { ...samePerson, number: newNumber }\n\n        personService\n          .update(samePerson.id, changedPerson)\n          .then(returnedPerson => {\n            console.log(returnedPerson)\n            setPersons(persons.map(person => person.id === samePerson.id ? returnedPerson : person))\n            setNewName('')\n            setNewNumber('')\n            setError(false)\n            setMessage(\n              `Updated ${returnedPerson.name}'s number`\n            )\n            setTimeout(() => {\n              setMessage(null)\n            }, 5000)\n          })\n          .catch(error => {\n            // console.log(error.response.data.error)\n            if (error.response.data.error) {\n              setMessage(\n                `${error.response.data.error}`\n              )\n            } else {\n              setMessage(\n                `Information of ${samePerson.name} has already been removed from server`\n              )\n              setPersons(persons.filter(person => person.name !== newName))\n            }\n            \n            setTimeout(() => {\n              setMessage(null)\n            }, 5000)\n            setError(true)\n            setNewName('')\n            setNewNumber('')\n          })\n      }\n\n    }\n\n  }\n\n  const handleFilterChange = (event) => {\n    setFilterPersons(event.target.value)\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handlePersonDelete = (event) => {\n    // console.log(event.target.id)\n    // note that person.id is number while event.target.id (button's id) is string!\n    const person = persons.find(person => person.id === event.target.id)\n    // console.log(person)\n\n    const confirm = window.confirm(`Are you sure you want to delete ${person.name}?`)\n    if (confirm) {\n      personService.remove(event.target.id)\n        .then(noResponse => {\n          setPersons(persons.filter(person => person.id !== event.target.id))\n          setError(false)\n          // It doesn't seem to work with 5s delay if without `then()`\n          setMessage(\n            `Deleted ${person.name}`\n          )\n          setTimeout(() => {\n            setMessage(null)\n          }, 5000)\n        })\n\n    }\n  }\n\n  const showPersons = filterPersons\n    ? persons.filter(person =>\n      person.name.toLowerCase().includes(filterPersons.toLowerCase())\n    )\n    : persons\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message} error={error} />\n      <Filter filterPersons={filterPersons} handleFilterChange={handleFilterChange} />\n      <h2>add a new</h2>\n      <PersonForm\n        newName={newName}\n        newNumber={newNumber}\n        handleNameChange={handleNameChange}\n        handleNumberChange={handleNumberChange}\n        addContact={addContact}\n      />\n      <h2>Numbers</h2>\n      <Persons showPersons={showPersons} handlePersonDelete={handlePersonDelete} />\n\n      {/* <div>debug: {newName}</div> */}\n      {/* <div>debug: {newNumber}</div> */}\n      {/* <div>debug: {filterPersons}</div> */}\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}